{"version":3,"sources":["../../../js/components/axios.js"],"names":["$","csrfSelector","tokenKey","attr","token","axios","defaults","headers","common","interceptors","response","use","error","status","swal","type","title","text","closeOnConfirm","window","location","Promise","reject"],"mappings":";;AAAA;;;AAGAA,EAAE,YAAM;;AAEN;;;AAGA,MAAMC,eAAeD,EAAE,mBAAF,CAArB;AACA,MAAME,WAAWD,aAAaE,IAAb,CAAkB,UAAlB,CAAjB;AACA,MAAMC,QAAQH,aAAaE,IAAb,CAAkB,YAAlB,CAAd;;AAEA;;;;;;;;AAQEE,QAAMC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,GAAgC;AAC9B,wBAAoB,gBADU;AAE9B,mBAAkBN,QAAlB,SAA8BE;AAFA,GAAhC;;AAKF;;;;;;;;;;;;;;;;;;;;;;AAsBAC,QAAMI,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC;AAAA,WAAYD,QAAZ;AAAA,GAAhC,EAAsD,iBAAS;;AAE7D,YAAQE,MAAMF,QAAN,CAAeG,MAAvB;;AAEE;AACA,WAAK,GAAL;AACEC,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,mBAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;AACF,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,oBAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;;AAEF;AACA,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,aAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;AACF,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,yCAFJ;AAGHC,gBAAM,iDAHH;AAIHC,0BAAgB;AAJb,SAAL,EAKG,YAAM;AACPC,iBAAOC,QAAP,GAAkB,aAAlB;AACD,SAPD;AAQA;AACF,WAAK,GAAL;AACEN,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,WAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;AACF,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,WAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;AACF,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,oBAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;AACF,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,iBAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;;AAEF;AACA,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,wBAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;AACF,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,iBAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;AACF,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,aAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;AACF,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,qBAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;AACF,WAAK,GAAL;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,iBAFJ;AAGHC,gBAAM;AAHH,SAAL;AAKA;;AAEF;AACA;AACEH,aAAK;AACHC,gBAAM,SADH;AAEHC,iBAAO,eAFJ;AAGHC,iEAAqDL,MAAMF,QAAN,CAAeG;AAHjE,SAAL;AAKA,eAAOQ,QAAQC,MAAR,CAAeV,KAAf,CAAP;AA7GJ;AAgHD,GAlHD;AAoHD,CAhKD;;AAkKA","file":"axios.js","sourcesContent":["/**\n * Loads all settings on DOM Load\n */\n$(() => {\n\n  /**\n   * Tokens for XHR Calls\n   */\n  const csrfSelector = $(\"meta[name='csrf']\");\n  const tokenKey = csrfSelector.attr(\"data-key\");\n  const token = csrfSelector.attr(\"data-token\");\n\n  /**\n   * Call when DOM is loaded to pass the tokenKey and token\n   *\n   * @param  {string} tokenKey\n   * @param  {string} token\n   *\n   * @return object axios\n   */\n    axios.defaults.headers.common = {\n      \"X-Requested-With\": \"XMLHttpRequest\",\n      \"X-CSRFToken\": `${tokenKey}|${token}`\n    };\n\n  /**\n   * Interceptor AJAX Error Handler for:\n   *\n   *   301 - Moved Permanently\n   *   308 - Permanent Redirect\n   *\n   *   400 - Bad Request\n   *   401 - Unauthorized\n   *   403 - Forbidden\n   *   404 - Not Found\n   *   405 - Method not Allowed\n   *   408 - Request Timeout\n   *   440 - Login Time-out\n   *\n   *   500 - Internal Service Error\n   *   501 - Not Implemented\n   *   502 - Bad Gateway\n   *   503 - Service Unavailable\n   *   504 - Gateway Timeout\n   *   505 - HTTP Version Not Accepted\n   *   508 - Loop Detected\n   */\n  axios.interceptors.response.use(response => response, error => {\n\n    switch (error.response.status) {\n\n      // @ 300 Errors\n      case 301:\n        swal({\n          type: \"warning\",\n          title: \"Moved Permanently\",\n          text: \"Error, this URI has moved permanently.\"\n        });\n        break;\n      case 302:\n        swal({\n          type: \"warning\",\n          title: \"Permanent Redirect\",\n          text: \"Error, This was permanently redirected.\"\n        });\n        break;\n\n      // @ 400 Errors\n      case 400:\n        swal({\n          type: \"warning\",\n          title: \"Bad Request\",\n          text: \"Error, This was a bad request that does not exist.\"\n        });\n        break;\n      case 401:\n        swal({\n          type: \"warning\",\n          title: \"Unauthorized; Your Session has expired.\",\n          text: \"Your session has expired, You must login again.\",\n          closeOnConfirm: false\n        }, () => {\n          window.location = \"/user/login\";\n        });\n        break;\n      case 403:\n        swal({\n          type: \"warning\",\n          title: \"Forbidden\",\n          text: \"Sorry, you are not allowed to access this\"\n        });\n        break;\n      case 404:\n        swal({\n          type: \"warning\",\n          title: \"Not Found\",\n          text: \"Error, The call was not found.\"\n        });\n        break;\n      case 405:\n        swal({\n          type: \"warning\",\n          title: \"Method not Allowed\",\n          text: \"Error, The method called is not allowed at this endpoint.\"\n        });\n        break;\n      case 408:\n        swal({\n          type: \"warning\",\n          title: \"Request Timeout\",\n          text: \"Error, The call has timeout, please try again.\"\n        });\n        break;\n\n      // @ 500 Errors\n      case 500:\n        swal({\n          type: \"warning\",\n          title: \"Internal Service Error\",\n          text: \"Error, There was an error in the back-end..\"\n        });\n        break;\n      case 501:\n        swal({\n          type: \"warning\",\n          title: \"Not Implemented\",\n          text: \"Error, This feature is not yet implemented.\"\n        });\n        break;\n      case 502:\n        swal({\n          type: \"warning\",\n          title: \"Bad Gateway\",\n          text: \"Error, This is a bad gateway.\"\n        });\n        break;\n      case 503:\n        swal({\n          type: \"warning\",\n          title: \"Service Unavailable\",\n          text: \"Error, The service is unavailable, please try again or come back later.\"\n        });\n        break;\n      case 504:\n        swal({\n          type: \"warning\",\n          title: \"Gateway Timeout\",\n          text: \"Error, The gateway timeout out. Please try again.\"\n        });\n        break;\n\n      // @ Unknown Error\n      default:\n        swal({\n          type: \"warning\",\n          title: \"General Error\",\n          text: `An unknown error occured with the status of ${error.response.status}`\n        });\n        return Promise.reject(error);\n    }\n\n  });\n\n});\n\n// export default { axios };\n"]}